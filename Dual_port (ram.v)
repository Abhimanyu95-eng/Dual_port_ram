
module Ram(
    input clk, reset, 
    
    input [7:0] A_port, 
    input w_ena, read_ena,
    input [5:0] addrA,
    output reg [7:0] A_out,
    
    input [7:0] B_port, 
    input w_enb, read_enb,
    input [5:0] addrB,
    output reg [7:0] B_out
    );
reg [7:0] mem [0:63];
    always@(posedge clk)begin
        if (reset) begin
            A_out <= 8'b0;
        end 
        else begin 
            if (w_ena) begin
                mem[addrA] <= A_port;
            end 
            if (read_ena) begin
                A_out <= mem[addrA]; 
            end
    end 
end

   always@(posedge clk)begin
        if (reset) begin
            B_out <= 8'b0;
        end 
        else begin 
            if (w_enb) begin
                mem[addrB] <= B_port;
            end 
            if (read_enb) begin
                B_out <= mem[addrB]; 
            end
    end 
end 
endmodule
